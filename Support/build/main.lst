                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _init
                             13 	.globl _spi_connected
                             14 	.globl _spi_avail
                             15 	.globl _getchar
                             16 	.globl _putchari
                             17 	.globl _stdio_init
                             18 	.globl _ul
                             19 	.globl _console
                             20 	.globl _process_events
                             21 	.globl _globals
                             22 	.globl _puts
                             23 ;--------------------------------------------------------
                             24 ; special function registers
                             25 ;--------------------------------------------------------
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DATA
                             30 ;--------------------------------------------------------
                             31 ; ram data
                             32 ;--------------------------------------------------------
                             33 	.area _INITIALIZED
                             34 ;--------------------------------------------------------
                             35 ; absolute external ram data
                             36 ;--------------------------------------------------------
                             37 	.area _DABS (ABS)
                             38 ;--------------------------------------------------------
                             39 ; global & static initialisations
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _GSINIT
                             43 	.area _GSFINAL
                             44 	.area _GSINIT
                             45 ;--------------------------------------------------------
                             46 ; Home
                             47 ;--------------------------------------------------------
                             48 	.area _HOME
                             49 	.area _HOME
                             50 ;--------------------------------------------------------
                             51 ; code
                             52 ;--------------------------------------------------------
                             53 	.area _CODE
                     0000    54 	G$init$0$0	= .
                             55 	.globl	G$init$0$0
                     0000    56 	C$main.c$31$0$0	= .
                             57 	.globl	C$main.c$31$0$0
                             58 ;../src/main.c:31: void init()
                             59 ;	---------------------------------
                             60 ; Function init
                             61 ; ---------------------------------
   0000                      62 _init::
                     0000    63 	C$main.c$34$1$77	= .
                             64 	.globl	C$main.c$34$1$77
                             65 ;../src/main.c:34: memset( globals(), 0, sizeof( struct global_vars ) );
   0000 CDr00r00      [17]   66 	call	_globals
   0003 36 00         [10]   67 	ld	(hl), #0x00
   0005 5D            [ 4]   68 	ld	e, l
   0006 54            [ 4]   69 	ld	d, h
   0007 13            [ 6]   70 	inc	de
   0008 01 22 04      [10]   71 	ld	bc, #0x0422
   000B ED B0         [21]   72 	ldir
                     000D    73 	C$main.c$37$1$77	= .
                             74 	.globl	C$main.c$37$1$77
                             75 ;../src/main.c:37: stdio_init();
                     000D    76 	C$main.c$38$1$77	= .
                             77 	.globl	C$main.c$38$1$77
                     000D    78 	XG$init$0$0	= .
                             79 	.globl	XG$init$0$0
   000D C3r00r00      [10]   80 	jp  _stdio_init
                     0010    81 	G$main$0$0	= .
                             82 	.globl	G$main$0$0
                     0010    83 	C$main.c$41$1$77	= .
                             84 	.globl	C$main.c$41$1$77
                             85 ;../src/main.c:41: void main(void)
                             86 ;	---------------------------------
                             87 ; Function main
                             88 ; ---------------------------------
   0010                      89 _main::
                     0010    90 	C$main.c$44$1$79	= .
                             91 	.globl	C$main.c$44$1$79
                             92 ;../src/main.c:44: init();
   0010 CDr00r00      [17]   93 	call	_init
                     0013    94 	C$main.c$48$1$79	= .
                             95 	.globl	C$main.c$48$1$79
                             96 ;../src/main.c:48: while(!spi_connected()) process_events();
   0013                      97 00101$:
   0013 CDr00r00      [17]   98 	call	_spi_connected
   0016 7D            [ 4]   99 	ld	a,l
   0017 B7            [ 4]  100 	or	a, a
   0018 20 05         [12]  101 	jr	NZ,00103$
   001A CDr00r00      [17]  102 	call	_process_events
   001D 18 F4         [12]  103 	jr	00101$
   001F                     104 00103$:
                     001F   105 	C$main.c$51$1$79	= .
                            106 	.globl	C$main.c$51$1$79
                            107 ;../src/main.c:51: puts("\033[2J\033[HCPC2.0 Boot Log - Supervisor OS, build " __VERSION__); ul();
   001F 21r4Ar00      [10]  108 	ld	hl,#___str_0
   0022 E5            [11]  109 	push	hl
   0023 CDr00r00      [17]  110 	call	_puts
   0026 F1            [10]  111 	pop	af
   0027 CDr00r00      [17]  112 	call	_ul
                     002A   113 	C$main.c$52$1$79	= .
                            114 	.globl	C$main.c$52$1$79
                            115 ;../src/main.c:52: console("Bringing up video controller");
   002A 21r7Dr00      [10]  116 	ld	hl,#___str_1
   002D E5            [11]  117 	push	hl
   002E CDr00r00      [17]  118 	call	_console
   0031 F1            [10]  119 	pop	af
                     0032   120 	C$main.c$57$2$80	= .
                            121 	.globl	C$main.c$57$2$80
                            122 ;../src/main.c:57: while(spi_avail() == 0) process_events();
   0032                     123 00104$:
   0032 CDr00r00      [17]  124 	call	_spi_avail
   0035 7D            [ 4]  125 	ld	a,l
   0036 B7            [ 4]  126 	or	a, a
   0037 20 05         [12]  127 	jr	NZ,00106$
   0039 CDr00r00      [17]  128 	call	_process_events
   003C 18 F4         [12]  129 	jr	00104$
   003E                     130 00106$:
                     003E   131 	C$main.c$58$2$80	= .
                            132 	.globl	C$main.c$58$2$80
                            133 ;../src/main.c:58: putchari( getchar() );
   003E CDr00r00      [17]  134 	call	_getchar
   0041 45            [ 4]  135 	ld	b,l
   0042 C5            [11]  136 	push	bc
   0043 33            [ 6]  137 	inc	sp
   0044 CDr00r00      [17]  138 	call	_putchari
   0047 33            [ 6]  139 	inc	sp
                     0048   140 	C$main.c$60$1$79	= .
                            141 	.globl	C$main.c$60$1$79
                     0048   142 	XG$main$0$0	= .
                            143 	.globl	XG$main$0$0
   0048 18 E8         [12]  144 	jr	00104$
                     004A   145 Fmain$__str_0$0$0 == .
   004A                     146 ___str_0:
   004A 1B                  147 	.db 0x1b
   004B 5B 32 4A            148 	.ascii "[2J"
   004E 1B                  149 	.db 0x1b
   004F 5B 48 43 50 43 32   150 	.ascii "[HCPC2.0 Boot Log - Supervisor OS, build #446"
        2E 30 20 42 6F 6F
        74 20 4C 6F 67 20
        2D 20 53 75 70 65
        72 76 69 73 6F 72
        20 4F 53 2C 20 62
        75 69 6C 64 20 23
        34 34 36
   007C 00                  151 	.db 0x00
                     007D   152 Fmain$__str_1$0$0 == .
   007D                     153 ___str_1:
   007D 42 72 69 6E 67 69   154 	.ascii "Bringing up video controller"
        6E 67 20 75 70 20
        76 69 64 65 6F 20
        63 6F 6E 74 72 6F
        6C 6C 65 72
   0099 00                  155 	.db 0x00
                            156 	.area _CODE
                            157 	.area _INITIALIZER
                            158 	.area _CABS (ABS)
