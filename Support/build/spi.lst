                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module spi
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _int_handler
                             12 	.globl _globals
                             13 	.globl _INI
                             14 	.globl _OUTI
                             15 	.globl _IN
                             16 	.globl _OUT
                             17 	.globl _spiSetHandler
                             18 	.globl _spiProcessEvents
                             19 	.globl _spiGetInUse
                             20 	.globl _spiGetProcessed
                             21 	.globl _spiSetInUse
                             22 	.globl _spiSetProcessed
                             23 	.globl _spiLock
                             24 	.globl _spiGetOutBuffer
                             25 	.globl _spiGetInBuffer
                             26 	.globl _spiExchange
                             27 ;--------------------------------------------------------
                             28 ; special function registers
                             29 ;--------------------------------------------------------
                             30 ;--------------------------------------------------------
                             31 ; ram data
                             32 ;--------------------------------------------------------
                             33 	.area _DATA
                             34 ;--------------------------------------------------------
                             35 ; ram data
                             36 ;--------------------------------------------------------
                             37 	.area _INITIALIZED
                             38 ;--------------------------------------------------------
                             39 ; absolute external ram data
                             40 ;--------------------------------------------------------
                             41 	.area _DABS (ABS)
                             42 ;--------------------------------------------------------
                             43 ; global & static initialisations
                             44 ;--------------------------------------------------------
                             45 	.area _HOME
                             46 	.area _GSINIT
                             47 	.area _GSFINAL
                             48 	.area _GSINIT
                             49 ;--------------------------------------------------------
                             50 ; Home
                             51 ;--------------------------------------------------------
                             52 	.area _HOME
                             53 	.area _HOME
                             54 ;--------------------------------------------------------
                             55 ; code
                             56 ;--------------------------------------------------------
                             57 	.area _CODE
                     0000    58 	G$spiSetHandler$0$0	= .
                             59 	.globl	G$spiSetHandler$0$0
                     0000    60 	C$spi.c$31$0$0	= .
                             61 	.globl	C$spi.c$31$0$0
                             62 ;../src/spi/spi.c:31: void spiSetHandler(char channel, void (*handler)(unsigned char *, unsigned char))
                             63 ;	---------------------------------
                             64 ; Function spiSetHandler
                             65 ; ---------------------------------
   0000                      66 _spiSetHandler::
                     0000    67 	C$spi.c$33$1$75	= .
                             68 	.globl	C$spi.c$33$1$75
                             69 ;../src/spi/spi.c:33: globals()->channel_handler_p[channel] = handler;
   0000 CDr00r00      [17]   70 	call	_globals
   0003 FD 21 02 00   [14]   71 	ld	iy,#2
   0007 FD 39         [15]   72 	add	iy,sp
   0009 FD 7E 00      [19]   73 	ld	a,0 (iy)
   000C 87            [ 4]   74 	add	a, a
   000D 5F            [ 4]   75 	ld	e, a
   000E 16 00         [ 7]   76 	ld	d,#0x00
   0010 19            [11]   77 	add	hl,de
   0011 FD 21 03 00   [14]   78 	ld	iy,#3
   0015 FD 39         [15]   79 	add	iy,sp
   0017 FD 7E 00      [19]   80 	ld	a,0 (iy)
   001A 77            [ 7]   81 	ld	(hl),a
   001B 23            [ 6]   82 	inc	hl
   001C FD 7E 01      [19]   83 	ld	a,1 (iy)
   001F 77            [ 7]   84 	ld	(hl),a
                     0020    85 	C$spi.c$34$1$75	= .
                             86 	.globl	C$spi.c$34$1$75
                     0020    87 	XG$spiSetHandler$0$0	= .
                             88 	.globl	XG$spiSetHandler$0$0
   0020 C9            [10]   89 	ret
                     0021    90 	G$spiProcessEvents$0$0	= .
                             91 	.globl	G$spiProcessEvents$0$0
                     0021    92 	C$spi.c$39$1$75	= .
                             93 	.globl	C$spi.c$39$1$75
                             94 ;../src/spi/spi.c:39: void spiProcessEvents()
                             95 ;	---------------------------------
                             96 ; Function spiProcessEvents
                             97 ; ---------------------------------
   0021                      98 _spiProcessEvents::
   0021 DD E5         [15]   99 	push	ix
   0023 DD 21 00 00   [14]  100 	ld	ix,#0
   0027 DD 39         [15]  101 	add	ix,sp
   0029 3B            [ 6]  102 	dec	sp
                     002A   103 	C$spi.c$43$1$76	= .
                            104 	.globl	C$spi.c$43$1$76
                            105 ;../src/spi/spi.c:43: struct global_vars * glob = globals();
   002A CDr00r00      [17]  106 	call	_globals
                     002D   107 	C$spi.c$47$1$76	= .
                            108 	.globl	C$spi.c$47$1$76
                            109 ;../src/spi/spi.c:47: if( !spiGetInUse() )
   002D CDrF0r00      [17]  110 	call	_spiGetInUse
   0030 7D            [ 4]  111 	ld	a,l
   0031 B7            [ 4]  112 	or	a, a
   0032 C2rECr00      [10]  113 	jp	NZ,00115$
                     0035   114 	C$spi.c$49$2$77	= .
                            115 	.globl	C$spi.c$49$2$77
                            116 ;../src/spi/spi.c:49: if( !spiGetProcessed() )
   0035 CDr01r01      [17]  117 	call	_spiGetProcessed
   0038 7D            [ 4]  118 	ld	a,l
   0039 B7            [ 4]  119 	or	a, a
   003A C2rCDr00      [10]  120 	jp	NZ,00110$
                     003D   121 	C$spi.c$52$3$78	= .
                            122 	.globl	C$spi.c$52$3$78
                            123 ;../src/spi/spi.c:52: buffer = spiGetInBuffer() - SPI_BUFFER_OFFSET;
   003D CDr83r01      [17]  124 	call	_spiGetInBuffer
   0040 EB            [ 4]  125 	ex	de,hl
                     0041   126 	C$spi.c$55$3$78	= .
                            127 	.globl	C$spi.c$55$3$78
                            128 ;../src/spi/spi.c:55: INI( SPI_DATA, buffer, SPI_BUFFER_OFFSET );			// Read just the header first
   0041 D5            [11]  129 	push	de
   0042 3E 02         [ 7]  130 	ld	a,#0x02
   0044 F5            [11]  131 	push	af
   0045 33            [ 6]  132 	inc	sp
   0046 D5            [11]  133 	push	de
   0047 AF            [ 4]  134 	xor	a, a
   0048 F5            [11]  135 	push	af
   0049 33            [ 6]  136 	inc	sp
   004A CDr00r00      [17]  137 	call	_INI
   004D F1            [10]  138 	pop	af
   004E F1            [10]  139 	pop	af
   004F D1            [10]  140 	pop	de
                     0050   141 	C$spi.c$56$1$76	= .
                            142 	.globl	C$spi.c$56$1$76
                            143 ;../src/spi/spi.c:56: INI( SPI_DATA, buffer + SPI_BUFFER_OFFSET, 128 );	// Then read 128 bytes of data
   0050 4B            [ 4]  144 	ld	c, e
   0051 42            [ 4]  145 	ld	b, d
   0052 03            [ 6]  146 	inc	bc
   0053 03            [ 6]  147 	inc	bc
   0054 C5            [11]  148 	push	bc
   0055 D5            [11]  149 	push	de
   0056 3E 80         [ 7]  150 	ld	a,#0x80
   0058 F5            [11]  151 	push	af
   0059 33            [ 6]  152 	inc	sp
   005A C5            [11]  153 	push	bc
   005B AF            [ 4]  154 	xor	a, a
   005C F5            [11]  155 	push	af
   005D 33            [ 6]  156 	inc	sp
   005E CDr00r00      [17]  157 	call	_INI
   0061 F1            [10]  158 	pop	af
   0062 F1            [10]  159 	pop	af
   0063 D1            [10]  160 	pop	de
   0064 C1            [10]  161 	pop	bc
                     0065   162 	C$spi.c$57$3$78	= .
                            163 	.globl	C$spi.c$57$3$78
                            164 ;../src/spi/spi.c:57: INI( SPI_DATA, buffer + SPI_BUFFER_OFFSET + 128, 128 );	// Then read 128 bytes of data
   0065 FD 21 82 00   [14]  165 	ld	iy,#0x0082
   0069 FD 19         [15]  166 	add	iy, de
   006B C5            [11]  167 	push	bc
   006C D5            [11]  168 	push	de
   006D 3E 80         [ 7]  169 	ld	a,#0x80
   006F F5            [11]  170 	push	af
   0070 33            [ 6]  171 	inc	sp
   0071 FD E5         [15]  172 	push	iy
   0073 AF            [ 4]  173 	xor	a, a
   0074 F5            [11]  174 	push	af
   0075 33            [ 6]  175 	inc	sp
   0076 CDr00r00      [17]  176 	call	_INI
   0079 F1            [10]  177 	pop	af
   007A F1            [10]  178 	pop	af
   007B D1            [10]  179 	pop	de
   007C C1            [10]  180 	pop	bc
                     007D   181 	C$spi.c$61$3$78	= .
                            182 	.globl	C$spi.c$61$3$78
                            183 ;../src/spi/spi.c:61: channel = buffer[0];
   007D 1A            [ 7]  184 	ld	a,(de)
   007E DD 77 FF      [19]  185 	ld	-1 (ix),a
                     0081   186 	C$spi.c$62$3$78	= .
                            187 	.globl	C$spi.c$62$3$78
                            188 ;../src/spi/spi.c:62: size = buffer[1];
   0081 EB            [ 4]  189 	ex	de,hl
   0082 23            [ 6]  190 	inc	hl
   0083 5E            [ 7]  191 	ld	e,(hl)
                     0084   192 	C$spi.c$65$3$78	= .
                            193 	.globl	C$spi.c$65$3$78
                            194 ;../src/spi/spi.c:65: if(( size > 0 ) & ( channel < SPI_CHANNELS ))
   0084 DD 7E FF      [19]  195 	ld	a,-1 (ix)
   0087 D6 10         [ 7]  196 	sub	a, #0x10
   0089 3E 00         [ 7]  197 	ld	a,#0x00
   008B 17            [ 4]  198 	rla
   008C 53            [ 4]  199 	ld	d,e
   008D A2            [ 4]  200 	and	a,d
   008E 28 33         [12]  201 	jr	Z,00104$
                     0090   202 	C$spi.c$66$3$78	= .
                            203 	.globl	C$spi.c$66$3$78
                            204 ;../src/spi/spi.c:66: if( globals()->channel_handler_p[channel] != NULL ) globals()->channel_handler_p[channel](buffer + SPI_BUFFER_OFFSET, size);
   0090 C5            [11]  205 	push	bc
   0091 D5            [11]  206 	push	de
   0092 CDr00r00      [17]  207 	call	_globals
   0095 D1            [10]  208 	pop	de
   0096 C1            [10]  209 	pop	bc
   0097 DD 7E FF      [19]  210 	ld	a,-1 (ix)
   009A 87            [ 4]  211 	add	a, a
   009B 57            [ 4]  212 	ld	d, a
   009C 85            [ 4]  213 	add	a,l
   009D 6F            [ 4]  214 	ld	l,a
   009E 7C            [ 4]  215 	ld	a,h
   009F CE 00         [ 7]  216 	adc	a, #0x00
   00A1 67            [ 4]  217 	ld	h,a
   00A2 7E            [ 7]  218 	ld	a, (hl)
   00A3 23            [ 6]  219 	inc	hl
   00A4 66            [ 7]  220 	ld	h,(hl)
   00A5 B4            [ 4]  221 	or	a,h
   00A6 28 1B         [12]  222 	jr	Z,00104$
   00A8 C5            [11]  223 	push	bc
   00A9 D5            [11]  224 	push	de
   00AA CDr00r00      [17]  225 	call	_globals
   00AD D1            [10]  226 	pop	de
   00AE C1            [10]  227 	pop	bc
   00AF 7D            [ 4]  228 	ld	a,l
   00B0 82            [ 4]  229 	add	a, d
   00B1 6F            [ 4]  230 	ld	l,a
   00B2 7C            [ 4]  231 	ld	a,h
   00B3 CE 00         [ 7]  232 	adc	a, #0x00
   00B5 67            [ 4]  233 	ld	h,a
   00B6 7E            [ 7]  234 	ld	a, (hl)
   00B7 23            [ 6]  235 	inc	hl
   00B8 66            [ 7]  236 	ld	h,(hl)
   00B9 6F            [ 4]  237 	ld	l,a
   00BA 7B            [ 4]  238 	ld	a,e
   00BB F5            [11]  239 	push	af
   00BC 33            [ 6]  240 	inc	sp
   00BD C5            [11]  241 	push	bc
   00BE CDr00r00      [17]  242 	call	___sdcc_call_hl
   00C1 F1            [10]  243 	pop	af
   00C2 33            [ 6]  244 	inc	sp
   00C3                     245 00104$:
                     00C3   246 	C$spi.c$69$3$78	= .
                            247 	.globl	C$spi.c$69$3$78
                            248 ;../src/spi/spi.c:69: spiSetProcessed(true);
   00C3 3E 01         [ 7]  249 	ld	a,#0x01
   00C5 F5            [11]  250 	push	af
   00C6 33            [ 6]  251 	inc	sp
   00C7 CDr2Dr01      [17]  252 	call	_spiSetProcessed
   00CA 33            [ 6]  253 	inc	sp
   00CB 18 1F         [12]  254 	jr	00115$
   00CD                     255 00110$:
                     00CD   256 	C$spi.h$76$6$82	= .
                            257 	.globl	C$spi.h$76$6$82
                            258 ;../include/spi.h:76: return IN(SPI_SR) & MASTER_RDY ? 0 : 1;
   00CD 3E 01         [ 7]  259 	ld	a,#0x01
   00CF F5            [11]  260 	push	af
   00D0 33            [ 6]  261 	inc	sp
   00D1 CDr00r00      [17]  262 	call	_IN
   00D4 33            [ 6]  263 	inc	sp
   00D5 CB 65         [ 8]  264 	bit	4, l
   00D7 20 13         [12]  265 	jr	NZ,00115$
                     00D9   266 	C$spi.c$74$3$79	= .
                            267 	.globl	C$spi.c$74$3$79
                            268 ;../src/spi/spi.c:74: if ( spiLock(0) ) spiExchange(0xff,0);	// Send NOP packet
   00D9 AF            [ 4]  269 	xor	a, a
   00DA F5            [11]  270 	push	af
   00DB 33            [ 6]  271 	inc	sp
   00DC CDr48r01      [17]  272 	call	_spiLock
   00DF 33            [ 6]  273 	inc	sp
   00E0 7D            [ 4]  274 	ld	a,l
   00E1 B7            [ 4]  275 	or	a, a
   00E2 28 08         [12]  276 	jr	Z,00115$
   00E4 21 FF 00      [10]  277 	ld	hl,#0x00ff
   00E7 E5            [11]  278 	push	hl
   00E8 CDr8Dr01      [17]  279 	call	_spiExchange
   00EB F1            [10]  280 	pop	af
   00EC                     281 00115$:
   00EC 33            [ 6]  282 	inc	sp
   00ED DD E1         [14]  283 	pop	ix
                     00EF   284 	C$spi.c$77$1$76	= .
                            285 	.globl	C$spi.c$77$1$76
                     00EF   286 	XG$spiProcessEvents$0$0	= .
                            287 	.globl	XG$spiProcessEvents$0$0
   00EF C9            [10]  288 	ret
                     00F0   289 	G$spiGetInUse$0$0	= .
                            290 	.globl	G$spiGetInUse$0$0
                     00F0   291 	C$spi.c$82$1$76	= .
                            292 	.globl	C$spi.c$82$1$76
                            293 ;../src/spi/spi.c:82: inline Bool spiGetInUse()
                            294 ;	---------------------------------
                            295 ; Function spiGetInUse
                            296 ; ---------------------------------
   00F0                     297 _spiGetInUse::
                     00F0   298 	C$spi.c$84$1$83	= .
                            299 	.globl	C$spi.c$84$1$83
                            300 ;../src/spi/spi.c:84: return (globals()->spi_in_use) ? true : false;
   00F0 CDr00r00      [17]  301 	call	_globals
   00F3 11 20 00      [10]  302 	ld	de, #0x0020
   00F6 19            [11]  303 	add	hl, de
   00F7 7E            [ 7]  304 	ld	a,(hl)
   00F8 B7            [ 4]  305 	or	a, a
   00F9 28 03         [12]  306 	jr	Z,00103$
   00FB 2E 01         [ 7]  307 	ld	l,#0x01
   00FD C9            [10]  308 	ret
   00FE                     309 00103$:
   00FE 2E 00         [ 7]  310 	ld	l,#0x00
                     0100   311 	C$spi.c$85$1$83	= .
                            312 	.globl	C$spi.c$85$1$83
                     0100   313 	XG$spiGetInUse$0$0	= .
                            314 	.globl	XG$spiGetInUse$0$0
   0100 C9            [10]  315 	ret
                     0101   316 	G$spiGetProcessed$0$0	= .
                            317 	.globl	G$spiGetProcessed$0$0
                     0101   318 	C$spi.c$90$1$83	= .
                            319 	.globl	C$spi.c$90$1$83
                            320 ;../src/spi/spi.c:90: inline Bool spiGetProcessed()
                            321 ;	---------------------------------
                            322 ; Function spiGetProcessed
                            323 ; ---------------------------------
   0101                     324 _spiGetProcessed::
                     0101   325 	C$spi.c$92$1$84	= .
                            326 	.globl	C$spi.c$92$1$84
                            327 ;../src/spi/spi.c:92: return globals()->spi_processed_n == 0;
   0101 CDr00r00      [17]  328 	call	_globals
   0104 11 21 00      [10]  329 	ld	de, #0x0021
   0107 19            [11]  330 	add	hl, de
   0108 7E            [ 7]  331 	ld	a,(hl)
   0109 B7            [ 4]  332 	or	a, a
   010A 20 04         [12]  333 	jr	NZ,00103$
   010C 3E 01         [ 7]  334 	ld	a,#0x01
   010E 18 01         [12]  335 	jr	00104$
   0110                     336 00103$:
   0110 AF            [ 4]  337 	xor	a,a
   0111                     338 00104$:
   0111 6F            [ 4]  339 	ld	l,a
                     0112   340 	C$spi.c$93$1$84	= .
                            341 	.globl	C$spi.c$93$1$84
                     0112   342 	XG$spiGetProcessed$0$0	= .
                            343 	.globl	XG$spiGetProcessed$0$0
   0112 C9            [10]  344 	ret
                     0113   345 	G$spiSetInUse$0$0	= .
                            346 	.globl	G$spiSetInUse$0$0
                     0113   347 	C$spi.c$98$1$84	= .
                            348 	.globl	C$spi.c$98$1$84
                            349 ;../src/spi/spi.c:98: void spiSetInUse(unsigned char state)
                            350 ;	---------------------------------
                            351 ; Function spiSetInUse
                            352 ; ---------------------------------
   0113                     353 _spiSetInUse::
                     0113   354 	C$spi.c$100$1$86	= .
                            355 	.globl	C$spi.c$100$1$86
                            356 ;../src/spi/spi.c:100: globals()->spi_in_use = (state == false) ? 0 : 1;
   0113 CDr00r00      [17]  357 	call	_globals
   0116 01 20 00      [10]  358 	ld	bc,#0x0020
   0119 09            [11]  359 	add	hl,bc
   011A FD 21 02 00   [14]  360 	ld	iy,#2
   011E FD 39         [15]  361 	add	iy,sp
   0120 FD 7E 00      [19]  362 	ld	a,0 (iy)
   0123 B7            [ 4]  363 	or	a,a
   0124 20 03         [12]  364 	jr	NZ,00103$
   0126 4F            [ 4]  365 	ld	c,a
   0127 18 02         [12]  366 	jr	00104$
   0129                     367 00103$:
   0129 0E 01         [ 7]  368 	ld	c,#0x01
   012B                     369 00104$:
   012B 71            [ 7]  370 	ld	(hl),c
                     012C   371 	C$spi.c$101$1$86	= .
                            372 	.globl	C$spi.c$101$1$86
                     012C   373 	XG$spiSetInUse$0$0	= .
                            374 	.globl	XG$spiSetInUse$0$0
   012C C9            [10]  375 	ret
                     012D   376 	G$spiSetProcessed$0$0	= .
                            377 	.globl	G$spiSetProcessed$0$0
                     012D   378 	C$spi.c$106$1$86	= .
                            379 	.globl	C$spi.c$106$1$86
                            380 ;../src/spi/spi.c:106: void spiSetProcessed(unsigned char state)
                            381 ;	---------------------------------
                            382 ; Function spiSetProcessed
                            383 ; ---------------------------------
   012D                     384 _spiSetProcessed::
                     012D   385 	C$spi.c$108$1$88	= .
                            386 	.globl	C$spi.c$108$1$88
                            387 ;../src/spi/spi.c:108: globals()->spi_processed_n = (state == false) ? 1 : 0;
   012D CDr00r00      [17]  388 	call	_globals
   0130 01 21 00      [10]  389 	ld	bc,#0x0021
   0133 09            [11]  390 	add	hl,bc
   0134 FD 21 02 00   [14]  391 	ld	iy,#2
   0138 FD 39         [15]  392 	add	iy,sp
   013A FD 7E 00      [19]  393 	ld	a,0 (iy)
   013D B7            [ 4]  394 	or	a, a
   013E 20 04         [12]  395 	jr	NZ,00103$
   0140 0E 01         [ 7]  396 	ld	c,#0x01
   0142 18 02         [12]  397 	jr	00104$
   0144                     398 00103$:
   0144 0E 00         [ 7]  399 	ld	c,#0x00
   0146                     400 00104$:
   0146 71            [ 7]  401 	ld	(hl),c
                     0147   402 	C$spi.c$109$1$88	= .
                            403 	.globl	C$spi.c$109$1$88
                     0147   404 	XG$spiSetProcessed$0$0	= .
                            405 	.globl	XG$spiSetProcessed$0$0
   0147 C9            [10]  406 	ret
                     0148   407 	G$spiLock$0$0	= .
                            408 	.globl	G$spiLock$0$0
                     0148   409 	C$spi.c$114$1$88	= .
                            410 	.globl	C$spi.c$114$1$88
                            411 ;../src/spi/spi.c:114: unsigned char spiLock(unsigned char channel)
                            412 ;	---------------------------------
                            413 ; Function spiLock
                            414 ; ---------------------------------
   0148                     415 _spiLock::
                     0148   416 	C$spi.c$116$1$90	= .
                            417 	.globl	C$spi.c$116$1$90
                            418 ;../src/spi/spi.c:116: struct global_vars * g = globals();
   0148 CDr00r00      [17]  419 	call	_globals
   014B 4D            [ 4]  420 	ld	c,l
   014C 44            [ 4]  421 	ld	b,h
                     014D   422 	C$spi.c$119$1$90	= .
                            423 	.globl	C$spi.c$119$1$90
                            424 ;../src/spi/spi.c:119: if( g->spi_in_use ) return false;
   014D C5            [11]  425 	push	bc
   014E FD E1         [14]  426 	pop	iy
   0150 FD 7E 20      [19]  427 	ld	a,32 (iy)
   0153 B7            [ 4]  428 	or	a, a
   0154 28 03         [12]  429 	jr	Z,00102$
   0156 2E 00         [ 7]  430 	ld	l,#0x00
   0158 C9            [10]  431 	ret
   0159                     432 00102$:
                     0159   433 	C$spi.c$122$1$90	= .
                            434 	.globl	C$spi.c$122$1$90
                            435 ;../src/spi/spi.c:122: g->spi_channel = channel;
   0159 21 22 00      [10]  436 	ld	hl,#0x0022
   015C 09            [11]  437 	add	hl,bc
   015D FD 21 02 00   [14]  438 	ld	iy,#2
   0161 FD 39         [15]  439 	add	iy,sp
   0163 FD 7E 00      [19]  440 	ld	a,0 (iy)
   0166 77            [ 7]  441 	ld	(hl),a
                     0167   442 	C$spi.c$125$1$90	= .
                            443 	.globl	C$spi.c$125$1$90
                            444 ;../src/spi/spi.c:125: spiSetInUse(true);
   0167 3E 01         [ 7]  445 	ld	a,#0x01
   0169 F5            [11]  446 	push	af
   016A 33            [ 6]  447 	inc	sp
   016B CDr13r01      [17]  448 	call	_spiSetInUse
   016E 33            [ 6]  449 	inc	sp
                     016F   450 	C$spi.c$126$1$90	= .
                            451 	.globl	C$spi.c$126$1$90
                            452 ;../src/spi/spi.c:126: spiSetProcessed(false);
   016F AF            [ 4]  453 	xor	a, a
   0170 F5            [11]  454 	push	af
   0171 33            [ 6]  455 	inc	sp
   0172 CDr2Dr01      [17]  456 	call	_spiSetProcessed
   0175 33            [ 6]  457 	inc	sp
                     0176   458 	C$spi.c$128$1$90	= .
                            459 	.globl	C$spi.c$128$1$90
                            460 ;../src/spi/spi.c:128: return true;
   0176 2E 01         [ 7]  461 	ld	l,#0x01
                     0178   462 	C$spi.c$129$1$90	= .
                            463 	.globl	C$spi.c$129$1$90
                     0178   464 	XG$spiLock$0$0	= .
                            465 	.globl	XG$spiLock$0$0
   0178 C9            [10]  466 	ret
                     0179   467 	G$spiGetOutBuffer$0$0	= .
                            468 	.globl	G$spiGetOutBuffer$0$0
                     0179   469 	C$spi.c$134$1$90	= .
                            470 	.globl	C$spi.c$134$1$90
                            471 ;../src/spi/spi.c:134: void * spiGetOutBuffer(void)
                            472 ;	---------------------------------
                            473 ; Function spiGetOutBuffer
                            474 ; ---------------------------------
   0179                     475 _spiGetOutBuffer::
                     0179   476 	C$spi.c$137$1$92	= .
                            477 	.globl	C$spi.c$137$1$92
                            478 ;../src/spi/spi.c:137: return globals()->outbound_comm_buffer + SPI_BUFFER_OFFSET;
   0179 CDr00r00      [17]  479 	call	_globals
   017C 01 23 02      [10]  480 	ld	bc,#0x0223
   017F 09            [11]  481 	add	hl,bc
   0180 23            [ 6]  482 	inc	hl
   0181 23            [ 6]  483 	inc	hl
                     0182   484 	C$spi.c$138$1$92	= .
                            485 	.globl	C$spi.c$138$1$92
                     0182   486 	XG$spiGetOutBuffer$0$0	= .
                            487 	.globl	XG$spiGetOutBuffer$0$0
   0182 C9            [10]  488 	ret
                     0183   489 	G$spiGetInBuffer$0$0	= .
                            490 	.globl	G$spiGetInBuffer$0$0
                     0183   491 	C$spi.c$143$1$92	= .
                            492 	.globl	C$spi.c$143$1$92
                            493 ;../src/spi/spi.c:143: void * spiGetInBuffer(void)
                            494 ;	---------------------------------
                            495 ; Function spiGetInBuffer
                            496 ; ---------------------------------
   0183                     497 _spiGetInBuffer::
                     0183   498 	C$spi.c$146$1$94	= .
                            499 	.globl	C$spi.c$146$1$94
                            500 ;../src/spi/spi.c:146: return globals()->inbound_comm_buffer + SPI_BUFFER_OFFSET;
   0183 CDr00r00      [17]  501 	call	_globals
   0186 01 23 00      [10]  502 	ld	bc,#0x0023
   0189 09            [11]  503 	add	hl,bc
   018A 23            [ 6]  504 	inc	hl
   018B 23            [ 6]  505 	inc	hl
                     018C   506 	C$spi.c$147$1$94	= .
                            507 	.globl	C$spi.c$147$1$94
                     018C   508 	XG$spiGetInBuffer$0$0	= .
                            509 	.globl	XG$spiGetInBuffer$0$0
   018C C9            [10]  510 	ret
                     018D   511 	G$spiExchange$0$0	= .
                            512 	.globl	G$spiExchange$0$0
                     018D   513 	C$spi.c$152$1$94	= .
                            514 	.globl	C$spi.c$152$1$94
                            515 ;../src/spi/spi.c:152: void spiExchange( unsigned char channel, unsigned char size )
                            516 ;	---------------------------------
                            517 ; Function spiExchange
                            518 ; ---------------------------------
   018D                     519 _spiExchange::
   018D DD E5         [15]  520 	push	ix
   018F DD 21 00 00   [14]  521 	ld	ix,#0
   0193 DD 39         [15]  522 	add	ix,sp
                     0195   523 	C$spi.c$155$1$96	= .
                            524 	.globl	C$spi.c$155$1$96
                            525 ;../src/spi/spi.c:155: struct global_vars * g = globals();
   0195 CDr00r00      [17]  526 	call	_globals
   0198 4D            [ 4]  527 	ld	c,l
   0199 44            [ 4]  528 	ld	b,h
                     019A   529 	C$spi.c$157$1$96	= .
                            530 	.globl	C$spi.c$157$1$96
                            531 ;../src/spi/spi.c:157: g->outbound_comm_buffer[0] = channel;
   019A 21 23 02      [10]  532 	ld	hl,#0x0223
   019D 09            [11]  533 	add	hl,bc
   019E EB            [ 4]  534 	ex	de,hl
   019F DD 7E 04      [19]  535 	ld	a,4 (ix)
   01A2 12            [ 7]  536 	ld	(de),a
                     01A3   537 	C$spi.c$158$1$96	= .
                            538 	.globl	C$spi.c$158$1$96
                            539 ;../src/spi/spi.c:158: g->outbound_comm_buffer[1] = size;
   01A3 21 24 02      [10]  540 	ld	hl,#0x0224
   01A6 09            [11]  541 	add	hl,bc
   01A7 DD 7E 05      [19]  542 	ld	a,5 (ix)
   01AA 77            [ 7]  543 	ld	(hl),a
                     01AB   544 	C$spi.h$66$4$99	= .
                            545 	.globl	C$spi.h$66$4$99
                            546 ;../include/spi.h:66: OUT(SPI_CR, FLUSH);	// Flush the inbound / outbound data
   01AB C5            [11]  547 	push	bc
   01AC D5            [11]  548 	push	de
   01AD 21 01 80      [10]  549 	ld	hl,#0x8001
   01B0 E5            [11]  550 	push	hl
   01B1 CDr00r00      [17]  551 	call	_OUT
   01B4 F1            [10]  552 	pop	af
   01B5 D1            [10]  553 	pop	de
   01B6 3E 02         [ 7]  554 	ld	a,#0x02
   01B8 F5            [11]  555 	push	af
   01B9 33            [ 6]  556 	inc	sp
   01BA D5            [11]  557 	push	de
   01BB AF            [ 4]  558 	xor	a, a
   01BC F5            [11]  559 	push	af
   01BD 33            [ 6]  560 	inc	sp
   01BE CDr00r00      [17]  561 	call	_OUTI
   01C1 F1            [10]  562 	pop	af
   01C2 F1            [10]  563 	pop	af
   01C3 C1            [10]  564 	pop	bc
                     01C4   565 	C$spi.c$165$1$96	= .
                            566 	.globl	C$spi.c$165$1$96
                            567 ;../src/spi/spi.c:165: OUTI( SPI_DATA, g->outbound_comm_buffer + SPI_BUFFER_OFFSET, 128);
   01C4 21 25 02      [10]  568 	ld	hl,#0x0225
   01C7 09            [11]  569 	add	hl,bc
   01C8 EB            [ 4]  570 	ex	de,hl
   01C9 C5            [11]  571 	push	bc
   01CA 3E 80         [ 7]  572 	ld	a,#0x80
   01CC F5            [11]  573 	push	af
   01CD 33            [ 6]  574 	inc	sp
   01CE D5            [11]  575 	push	de
   01CF AF            [ 4]  576 	xor	a, a
   01D0 F5            [11]  577 	push	af
   01D1 33            [ 6]  578 	inc	sp
   01D2 CDr00r00      [17]  579 	call	_OUTI
   01D5 F1            [10]  580 	pop	af
   01D6 F1            [10]  581 	pop	af
   01D7 C1            [10]  582 	pop	bc
                     01D8   583 	C$spi.c$166$1$96	= .
                            584 	.globl	C$spi.c$166$1$96
                            585 ;../src/spi/spi.c:166: OUTI( SPI_DATA, g->outbound_comm_buffer + SPI_BUFFER_OFFSET + 128, 128);
   01D8 21 A5 02      [10]  586 	ld	hl,#0x02a5
   01DB 09            [11]  587 	add	hl,bc
   01DC 4D            [ 4]  588 	ld	c,l
   01DD 44            [ 4]  589 	ld	b,h
   01DE 3E 80         [ 7]  590 	ld	a,#0x80
   01E0 F5            [11]  591 	push	af
   01E1 33            [ 6]  592 	inc	sp
   01E2 C5            [11]  593 	push	bc
   01E3 AF            [ 4]  594 	xor	a, a
   01E4 F5            [11]  595 	push	af
   01E5 33            [ 6]  596 	inc	sp
   01E6 CDr00r00      [17]  597 	call	_OUTI
   01E9 F1            [10]  598 	pop	af
                     01EA   599 	C$spi.h$61$4$102	= .
                            600 	.globl	C$spi.h$61$4$102
                            601 ;../include/spi.h:61: OUT(SPI_CR, SLAVE_RDY);	// Indicate ready
   01EA 21 01 01      [10]  602 	ld	hl, #0x0101
   01ED E3            [19]  603 	ex	(sp),hl
   01EE CDr00r00      [17]  604 	call	_OUT
   01F1 F1            [10]  605 	pop	af
                     01F2   606 	C$spi.c$173$1$96	= .
                            607 	.globl	C$spi.c$173$1$96
                            608 ;../src/spi/spi.c:173: while( spiGetInUse() ) int_handler();
   01F2                     609 00101$:
                     01F2   610 	C$spi.c$84$4$105	= .
                            611 	.globl	C$spi.c$84$4$105
                            612 ;../src/spi/spi.c:84: return (globals()->spi_in_use) ? true : false;
   01F2 CDr00r00      [17]  613 	call	_globals
   01F5 11 20 00      [10]  614 	ld	de, #0x0020
   01F8 19            [11]  615 	add	hl, de
   01F9 7E            [ 7]  616 	ld	a,(hl)
   01FA B7            [ 4]  617 	or	a, a
   01FB 28 05         [12]  618 	jr	Z,00107$
                     01FD   619 	C$spi.c$173$1$96	= .
                            620 	.globl	C$spi.c$173$1$96
                            621 ;../src/spi/spi.c:173: while( spiGetInUse() ) int_handler();
   01FD CDr00r00      [17]  622 	call	_int_handler
   0200 18 F0         [12]  623 	jr	00101$
   0202                     624 00107$:
   0202 DD E1         [14]  625 	pop	ix
                     0204   626 	C$spi.c$176$1$96	= .
                            627 	.globl	C$spi.c$176$1$96
                     0204   628 	XG$spiExchange$0$0	= .
                            629 	.globl	XG$spiExchange$0$0
   0204 C9            [10]  630 	ret
                            631 	.area _CODE
                            632 	.area _INITIALIZER
                            633 	.area _CABS (ABS)
