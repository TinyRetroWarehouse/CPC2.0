
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module CPC2_C5G(

	//////////// CLOCK //////////
	CLOCK_125_p,
	CLOCK_50_B5B,
	CLOCK_50_B6A,
	CLOCK_50_B7A,
	CLOCK_50_B8A,

	//////////// LED //////////
	LEDG,
	LEDR,

	//////////// KEY //////////
	CPU_RESET_n,
	KEY,

	//////////// SW //////////
	SW,

	//////////// HDMI-TX //////////
	HDMI_TX_CLK,
	HDMI_TX_D,
	HDMI_TX_DE,
	HDMI_TX_HS,
	HDMI_TX_INT,
	HDMI_TX_VS,

	//////////// Audio //////////
	AUD_ADCDAT,
	AUD_ADCLRCK,
	AUD_BCLK,
	AUD_DACDAT,
	AUD_DACLRCK,
	AUD_XCK,

	//////////// I2C for Audio/HDMI-TX/Si5338/HSMC //////////
	I2C_SCL,
	I2C_SDA,

	//////////// SDCARD //////////
	SD_CLK,
	SD_CMD,
	SD_DAT,

	//////////// Uart to USB //////////
	UART_RX,
	UART_TX,

	//////////// SRAM //////////
	SRAM_A,
	SRAM_CE_n,
	SRAM_D,
	SRAM_LB_n,
	SRAM_OE_n,
	SRAM_UB_n,
	SRAM_WE_n,

	//////////// GPIO, GPIO connect to GPIO Default //////////
	GPIO 
);

//=======================================================
//  PARAMETER declarations
//=======================================================


//=======================================================
//  PORT declarations
//=======================================================

//////////// CLOCK //////////
input 		          		CLOCK_125_p;
input 		          		CLOCK_50_B5B;
input 		          		CLOCK_50_B6A;
input 		          		CLOCK_50_B7A;
input 		          		CLOCK_50_B8A;

//////////// LED //////////
output		     [7:0]		LEDG;
output		     [9:0]		LEDR;

//////////// KEY //////////
input 		          		CPU_RESET_n;
input 		     [3:0]		KEY;

//////////// SW //////////
input 		     [9:0]		SW;

//////////// HDMI-TX //////////
output		          		HDMI_TX_CLK;
output		    [23:0]		HDMI_TX_D;
output		          		HDMI_TX_DE;
output		          		HDMI_TX_HS;
input 		          		HDMI_TX_INT;
output		          		HDMI_TX_VS;

//////////// Audio //////////
input 		          		AUD_ADCDAT;
inout 		          		AUD_ADCLRCK;
inout 		          		AUD_BCLK;
output		          		AUD_DACDAT;
inout 		          		AUD_DACLRCK;
output		          		AUD_XCK;

//////////// I2C for Audio/HDMI-TX/Si5338/HSMC //////////
output		          		I2C_SCL;
inout 		          		I2C_SDA;

//////////// SDCARD //////////
output		          		SD_CLK;
inout 		          		SD_CMD;
inout 		     [3:0]		SD_DAT;

//////////// Uart to USB //////////
input 		          		UART_RX;
output		          		UART_TX;

//////////// SRAM //////////
output		    [17:0]		SRAM_A;
output		          		SRAM_CE_n;
inout 		    [15:0]		SRAM_D;
output		          		SRAM_LB_n;
output		          		SRAM_OE_n;
output		          		SRAM_UB_n;
output		          		SRAM_WE_n;

//////////// GPIO, GPIO connect to GPIO Default //////////
inout 		    [35:0]		GPIO;

wire [2:0] dummy1;

CPC2 cpc2_inst (
		.CLK_50(CLOCK_50_B5B),
		.CLK2_50(CLOCK_50_B6A),
		.CLK_12(CLOCK_50_B7A),
		// Control Ports
		.DATA7(),					// Unused
		.DATA6(),					// Unused
		.DATA5(KEY != 4'b1111),					// Soft Reset - any key
		.I2C_SCL(I2C_SCL),						// INOUT - HDMI
		.I2C_SDA(I2C_SDA),						// INOUT - HDMI
		// Disk/activity LED
		.LED(LEDG[0]),
		// Video port - output
		.VSYNC(HDMI_TX_VS),
		.HSYNC(HDMI_TX_HS),
		.VDE(HDMI_TX_DE),
		.VCLK(HDMI_TX_CLK),
		.R(HDMI_TX_D[23:16]),
		.G(HDMI_TX_D[15:8]),
		.B(HDMI_TX_D[7:0]),
		// Video Audio
		.I2S(),	// 4 bits
		.ASCLK(),
		.LRCLK(),
		.MCLK(),
		// Uart port
		.uart_rx_i(UART_RX),
		.uart_tx_o(UART_TX),
		// USB port
		.usb_mode(),
		.usb_suspend(),
		.usb_vm(),
		.usb_vp(),
		.usb_rcv(),
		.usb_vpo(),
		.usb_vmo(),
		.usb_speed(),
		.usb_oen(),
		// SDRAM interface
		.sdram_Dq(),
		.sdram_Addr(),
		.sdram_Ba(), 
		.sdramClk(), 
		.sdram_Cke(), 
		.sdram_Cs_n(), 
		.sdram_Ras_n(), 
		.sdram_Cas_n(), 
		.sdram_We_n(), 
		.sdram_Dqm()
		);

endmodule
